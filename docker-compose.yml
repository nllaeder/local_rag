version: '3.8'

services:
  # PostgreSQL database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: rag_system
      POSTGRES_USER: rag_user
      POSTGRES_PASSWORD: rag_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init_database.sql:/docker-entrypoint-initdb.d/init_database.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rag_user -d rag_system"]
      interval: 5s
      timeout: 5s
      retries: 5

  # FastAPI backend
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: rag_system
      POSTGRES_USER: rag_user
      POSTGRES_PASSWORD: rag_password
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      CLAUDE_MODEL: claude-3-sonnet-20240229
      EMBEDDING_MODEL: all-MiniLM-L6-v2
      DEVICE: cpu
      CHUNK_SIZE: 1000
      CHUNK_OVERLAP: 200
      LOG_LEVEL: INFO
    volumes:
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Streamlit UI
  ui:
    build:
      context: .
      dockerfile: docker/Dockerfile.ui
    ports:
      - "8501:8501"
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data: